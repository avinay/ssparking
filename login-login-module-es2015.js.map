{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login.service.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8vB;;;;;;;;;;;;;;;;;;ACA2C;AACU;AAMrD,IAAa,YAAY,GAAzB,MAAa,YAAY;IAEvB,YAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;IAAI,CAAC;IAE1D,KAAK,CAAC,WAA4B;QAChC,OAAO,IAAI,CAAC,gBAAgB;aAC3B,IAAI;aACJ,0BAA0B,CACzB,WAAW,CAAC,KAAK,EACjB,WAAW,CAAC,QAAQ,CACrB,CAAC;IACJ,CAAC;CACF;;YAVuC,kEAAe;;AAF1C,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAGsC,kEAAe;GAF1C,YAAY,CAYxB;AAZwB;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,kEAAmB;YACnB,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;AC1B5B,8BAA8B,qBAAqB,oBAAoB,GAAG,gCAAgC,oBAAoB,qBAAqB,uBAAuB,GAAG,iBAAiB,8HAA8H,GAAG,6CAA6C,usC;;;;;;;;;;;;;;;;;;;;ACA1T;AACkB;AAEpB;AACP;AAOzC,IAAa,SAAS,GAAtB,MAAa,SAAS;IAIpB,YACU,OAAe,EACf,aAA2B,EACnC,WAAwB;QAFhB,YAAO,GAAP,OAAO,CAAQ;QACf,kBAAa,GAAb,aAAa,CAAc;QAGnC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK;QACH,MAAM,gBAAgB,GAAoB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB,CAAC;aACzC,IAAI,CAAC,CAAC,QAAQ,EAAC,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,SAAS,EAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;QAC1C,CAAC,CAAC;IACJ,CAAC;CAEF;;YAzBoB,sDAAM;YACA,2DAAY;YACtB,0DAAW;;AAPf,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,uIAAgC;;KAEjC,CAAC;2EAMmB,sDAAM;QACA,2DAAY;QACtB,0DAAW;GAPf,SAAS,CA8BrB;AA9BqB","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-content class=\\\"loginContent\\\">\\n\\n  <ion-card class=\\\"loginCard\\\">\\n    <ion-card-content>\\n      <ion-card-header class=\\\"login-brand\\\">\\n        SKD Parking\\n      </ion-card-header>\\n      <form [formGroup]=\\\"loginFormGroup\\\">\\n        <ion-item>\\n          <ion-label>Email</ion-label>\\n          <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Password</ion-label>\\n          <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <ion-button (click)=\\\"login()\\\" [disabled]=\\\"loginFormGroup.invalid\\\" expand=\\\"full\\\">Login</ion-button>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { LoginCredential } from './types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _angularFireAuth: AngularFireAuth) { }\n\n  login(credentials: LoginCredential): Promise<any>{\n    return this._angularFireAuth\n    .auth\n    .signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \".loginCard {\\n  background: #fff;\\n  margin-top: 30%;\\n}\\n\\n.loginCard ion-card-header {\\n  font-size: 42px;\\n  font-weight: 300;\\n  text-align: center;\\n}\\n\\nion-content {\\n  --background: #fff url(\\\"http://lrandomdev.com/demo/lemon/www/assets/images/lemon4.png\\\") no-repeat center center / cover;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hdHRodi9teXBhcmtpbmcvU1NQYXJraW5nQXBwL3NyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUNBRjs7QURFQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FEQ0E7RUFDSSx1SEFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubG9naW5DYXJke1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBtYXJnaW4tdG9wOiAzMCU7XG59XG4ubG9naW5DYXJkIGlvbi1jYXJkLWhlYWRlcntcbiAgZm9udC1zaXplOiA0MnB4O1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5pb24tY29udGVudHtcbiAgICAtLWJhY2tncm91bmQ6ICNmZmYgdXJsKCdodHRwOi8vbHJhbmRvbWRldi5jb20vZGVtby9sZW1vbi93d3cvYXNzZXRzL2ltYWdlcy9sZW1vbjQucG5nJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgLyBjb3Zlcjtcbn1cbiIsIi5sb2dpbkNhcmQge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBtYXJnaW4tdG9wOiAzMCU7XG59XG5cbi5sb2dpbkNhcmQgaW9uLWNhcmQtaGVhZGVyIHtcbiAgZm9udC1zaXplOiA0MnB4O1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiAjZmZmIHVybChcImh0dHA6Ly9scmFuZG9tZGV2LmNvbS9kZW1vL2xlbW9uL3d3dy9hc3NldHMvaW1hZ2VzL2xlbW9uNC5wbmdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgLyBjb3Zlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginCredential } from '../types';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginFormGroup: FormGroup;\n\n  constructor(\n    private _router: Router,\n    private _loginService: LoginService,\n    formBuilder: FormBuilder\n  ) {\n    this.loginFormGroup = formBuilder.group({\n      email: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  login(){\n    const loginCredentials: LoginCredential = this.loginFormGroup.value;\n    this._loginService.login(loginCredentials)\n    .then((authData)=> {\n      this._router.navigate([\"/tabs\"]);\n      console.log(authData);\n    })\n    .catch((authError)=>{\n      console.log(\"Auth Error =>\", authError);\n    })\n  }\n\n}\n"],"sourceRoot":""}